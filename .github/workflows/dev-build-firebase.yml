name: Expo Dev Build & Distribute

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest

    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN}}
      EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      TESTERS: ${{ vars.TESTERS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          corepack enable
          pnpm install
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Authenticate with Expo
        run: pnpm exec eas whoami || pnpm exec eas login

      - name: Trigger EAS build
        id: eas-build
        run: |
          BUILD_JSON=$(pnpm exec eas build --platform android --profile development --non-interactive --json)
          echo "$BUILD_JSON" > build-result.json
          BUILD_URL=$(echo "$BUILD_JSON" | jq -r '.builds.android.artifacts.buildUrl')
          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      - name: Download APK
        run: |
          curl -L -o app-dev.apk "$BUILD_URL"

      - name: Upload to Firebase App Distribution
        run: |
          pnpm exec firebase appdistribution:distribute app-dev.apk \
            --app "$FIREBASE_APP_ID" \
            --testers "$TESTERS" \
            --release-notes "Auto-uploaded build from GitHub Actions on $(date +'%Y-%m-%d %H:%M')"
